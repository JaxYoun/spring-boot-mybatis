<?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yang.springbootmybatis.mapper.RoleMenuMapper">

    <resultMap id="roleMap" type="com.yang.springbootmybatis.domain.Role">
        <id property="id" javaType="Integer" column="role_id"/>
        <result property="name" javaType="String" column="role_name"/>
        <collection property="menuList" select="getMenu" column="{roleId = role_id}"/>
    </resultMap>

    <!--外层SQL-->
    <select id="getRoleWithNestedSql" resultMap="roleMap">
        SELECT
            r.id AS `role_id`,
            r.`name` AS `role_name`
        FROM
            t_role AS r
    </select>

    <!--内层SQL-->
    <select id="getMenu" resultType="com.yang.springbootmybatis.domain.Menu">
        SELECT
            m.id AS `id`,
            m.`name` AS `name`
        FROM
            t_menu AS m
            INNER JOIN t_role_menu AS rm ON rm.menu_id = m.id
        WHERE rm.role_id = ${roleId}
        and
    </select>

<!--==============================分割线========================================================-->
    <resultMap id="nestedResultRoleMap" type="com.yang.springbootmybatis.domain.Role">
        <id property="id" column="role_id"/>
        <result property="name" column="role_name"/>
        <collection property="menuList" ofType="com.yang.springbootmybatis.domain.Menu">
            <id property="id" column="menu_id"/>
            <result property="name" column="menu_name"/>
            <collection property="buttonList" column="id" ofType="com.yang.springbootmybatis.domain.Button">
                <id property="id" column="button_id"/>
                <result property="name" column="button_name"/>
            </collection>
        </collection>

    </resultMap>

    <!--通过内嵌结果集的方式查询（支持多层嵌套）-->
    <select id="getRoleWithNestedResultMap" resultMap="nestedResultRoleMap">
        SELECT
            r.id AS `role_id`,
            r.`name` AS `role_name`,
            m.id AS `menu_id`,
            m.`name` AS `menu_name`,
            b.id AS `button_id`,
            b.`name` AS `button_name`
        FROM
            t_role AS r
            LEFT JOIN t_role_menu AS rm ON r.id = rm.role_id
            LEFT JOIN t_menu AS m ON rm.menu_id = m.id
            INNER JOIN t_menu_button AS mb ON m.id = mb.menu_id
            INNER JOIN t_button AS b ON b.id = mb.button_id
    </select>

</mapper>